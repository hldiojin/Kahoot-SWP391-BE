[
  {
    "ContainingType": "API_Services.Controllers.AuthController",
    "Method": "Login",
    "RelativePath": "api/auth/login",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "Repository.DTO.RequestDTO\u002BLoginRequestDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 200
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 400
      },
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 500
      }
    ]
  },
  {
    "ContainingType": "API_Services.Controllers.AuthController",
    "Method": "Logout",
    "RelativePath": "api/auth/logout",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "Repository.DTO.ResponseDTO",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      },
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 500
      }
    ]
  },
  {
    "ContainingType": "API_Services.Controllers.AuthController",
    "Method": "GetCurrentUser",
    "RelativePath": "api/auth/me",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 200
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 401
      },
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 500
      }
    ]
  },
  {
    "ContainingType": "API_Services.Controllers.AuthController",
    "Method": "Register",
    "RelativePath": "api/auth/register",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "Repository.DTO.RequestDTO\u002BRegisterRequestDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 201
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 400
      },
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 500
      }
    ]
  },
  {
    "ContainingType": "API_Services.Controllers.CategoryController",
    "Method": "GetAllCategories",
    "RelativePath": "api/categories",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[Repository.DTO.RequestDTO\u002BCategoryDTO, Repository, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      },
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 500
      }
    ]
  },
  {
    "ContainingType": "API_Services.Controllers.CategoryController",
    "Method": "AddCategory",
    "RelativePath": "api/categories",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "categoryDTO",
        "Type": "Repository.DTO.RequestDTO\u002BCategoryDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Repository.DTO.RequestDTO\u002BCategoryDTO",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 201
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 400
      },
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 500
      }
    ]
  },
  {
    "ContainingType": "API_Services.Controllers.CategoryController",
    "Method": "GetCategoryById",
    "RelativePath": "api/categories/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Repository.DTO.RequestDTO\u002BCategoryDTO",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 404
      },
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 500
      }
    ]
  },
  {
    "ContainingType": "API_Services.Controllers.CategoryController",
    "Method": "UpdateCategory",
    "RelativePath": "api/categories/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "categoryDTO",
        "Type": "Repository.DTO.RequestDTO\u002BCategoryDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Repository.DTO.RequestDTO\u002BCategoryDTO",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 400
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 404
      },
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 500
      }
    ]
  },
  {
    "ContainingType": "API_Services.Controllers.CategoryController",
    "Method": "DeleteCategory",
    "RelativePath": "api/categories/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 204
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 404
      },
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 500
      }
    ]
  },
  {
    "ContainingType": "API_Services.Controllers.GroupMemberController",
    "Method": "AddGroupMember",
    "RelativePath": "api/GroupMember",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "groupMemberDto",
        "Type": "Repository.DTO.RequestDTO\u002BGroupMemberDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "API_Services.Controllers.GroupMemberController",
    "Method": "GetGroupMemberById",
    "RelativePath": "api/GroupMember/{groupId}/{playerId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "groupId",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "playerId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "API_Services.Controllers.GroupMemberController",
    "Method": "UpdateGroupMember",
    "RelativePath": "api/GroupMember/{groupId}/{playerId}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "groupId",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "playerId",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "groupMemberDto",
        "Type": "Repository.DTO.RequestDTO\u002BGroupMemberDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "API_Services.Controllers.GroupMemberController",
    "Method": "DeleteGroupMember",
    "RelativePath": "api/GroupMember/{groupId}/{playerId}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "groupId",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "playerId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "API_Services.Controllers.GroupMemberController",
    "Method": "GetGroupMembersByGroupId",
    "RelativePath": "api/GroupMember/group/{groupId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "groupId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "API_Services.Controllers.GroupMemberController",
    "Method": "GetGroupMemberByGroupId",
    "RelativePath": "api/GroupMember/group/groupid/{groupId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "groupId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "API_Services.Controllers.GroupMemberController",
    "Method": "GetGroupMemberByPlayerId",
    "RelativePath": "api/GroupMember/player/{playerId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "playerId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "API_Services.Controllers.GroupMemberController",
    "Method": "SelectGroup",
    "RelativePath": "api/GroupMember/select-group",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "Repository.DTO.RequestDTO\u002BCreateGroupMemberDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "API_Services.Controllers.GroupController",
    "Method": "GetGroups",
    "RelativePath": "api/groups",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "API_Services.Controllers.GroupController",
    "Method": "CreateGroup",
    "RelativePath": "api/groups",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "groupDto",
        "Type": "Repository.DTO.RequestDTO\u002BGroupDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "API_Services.Controllers.GroupController",
    "Method": "GetGroupById",
    "RelativePath": "api/groups/{groupId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "groupId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "API_Services.Controllers.GroupController",
    "Method": "UpdateGroup",
    "RelativePath": "api/groups/{groupId}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "groupId",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "groupDto",
        "Type": "Repository.DTO.RequestDTO\u002BGroupDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "API_Services.Controllers.GroupController",
    "Method": "DeleteGroup",
    "RelativePath": "api/groups/{groupId}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "groupId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "API_Services.Controllers.PaymentController",
    "Method": "CreatePayment",
    "RelativePath": "api/Payment",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "servicePackId",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "API_Services.Controllers.PaymentController",
    "Method": "PayOSCallback",
    "RelativePath": "api/Payment",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "API_Services.Controllers.PaymentController",
    "Method": "CancelPayment",
    "RelativePath": "api/Payment/cancel-payment/{paymentId}",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "paymentId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "API_Services.Controllers.PlayerController",
    "Method": "CreatePlayer",
    "RelativePath": "api/Player",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "playerDto",
        "Type": "Repository.DTO.RequestDTO\u002BPlayerDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "API_Services.Controllers.PlayerController",
    "Method": "GetAllPlayers",
    "RelativePath": "api/Player",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "API_Services.Controllers.PlayerController",
    "Method": "GetPlayerById",
    "RelativePath": "api/Player/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "API_Services.Controllers.PlayerController",
    "Method": "UpdatePlayer",
    "RelativePath": "api/Player/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "playerDto",
        "Type": "Repository.DTO.RequestDTO\u002BPlayerDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "API_Services.Controllers.PlayerController",
    "Method": "DeletePlayer",
    "RelativePath": "api/Player/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "API_Services.Controllers.PlayerAnswerController",
    "Method": "CreatePlayerAnswer",
    "RelativePath": "api/PlayerAnswer",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "playerAnswerDto",
        "Type": "Repository.DTO.RequestDTO\u002BPlayerAnswerDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "API_Services.Controllers.PlayerAnswerController",
    "Method": "GetAllPlayerAnswers",
    "RelativePath": "api/PlayerAnswer",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "API_Services.Controllers.PlayerAnswerController",
    "Method": "GetPlayerAnswerById",
    "RelativePath": "api/PlayerAnswer/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "API_Services.Controllers.PlayerAnswerController",
    "Method": "UpdatePlayerAnswer",
    "RelativePath": "api/PlayerAnswer/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "playerAnswerDto",
        "Type": "Repository.DTO.RequestDTO\u002BPlayerAnswerDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "API_Services.Controllers.PlayerAnswerController",
    "Method": "DeletePlayerAnswer",
    "RelativePath": "api/PlayerAnswer/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "API_Services.Controllers.PlayerAnswerController",
    "Method": "CalculateGroupScore",
    "RelativePath": "api/PlayerAnswer/GroupScore",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "Repository.DTO.RequestDTO\u002BGroupScoreRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Repository.DTO.GroupScoreResponse",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "API_Services.Controllers.PlayerAnswerController",
    "Method": "GetPlayerAnswersByPlayerId",
    "RelativePath": "api/PlayerAnswer/Player/{playerId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "playerId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "API_Services.Controllers.PlayerAnswerController",
    "Method": "GetPlayerAnswersByQuestionId",
    "RelativePath": "api/PlayerAnswer/Question/{questionId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "questionId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "API_Services.Controllers.PlayerAnswerController",
    "Method": "CalculateSoloScore",
    "RelativePath": "api/PlayerAnswer/SoloScore",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "Repository.DTO.RequestDTO\u002BSoloScoreRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Int32",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "API_Services.Controllers.QuestionController",
    "Method": "CreateQuestion",
    "RelativePath": "api/questions",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "questionDto",
        "Type": "Repository.DTO.RequestDTO\u002BQuestionDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "API_Services.Controllers.QuestionController",
    "Method": "GetQuestionById",
    "RelativePath": "api/questions/{questionId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "questionId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "API_Services.Controllers.QuestionController",
    "Method": "UpdateQuestion",
    "RelativePath": "api/questions/{questionId}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "questionId",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "questionDto",
        "Type": "Repository.DTO.RequestDTO\u002BQuestionDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "API_Services.Controllers.QuestionController",
    "Method": "DeleteQuestion",
    "RelativePath": "api/questions/{questionId}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "questionId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "API_Services.Controllers.QuestionController",
    "Method": "GetQuestionsByQuizId",
    "RelativePath": "api/questions/quiz/{quizId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "quizId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "API_Services.Controllers.QuizController",
    "Method": "CreateQuiz",
    "RelativePath": "api/Quiz",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "Repository.DTO.RequestDTO\u002BCreateQuizDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "API_Services.Controllers.QuizController",
    "Method": "GetListQuiz",
    "RelativePath": "api/Quiz",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "API_Services.Controllers.QuizController",
    "Method": "DeleteQuiz",
    "RelativePath": "api/Quiz/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "API_Services.Controllers.QuizController",
    "Method": "GetQuizById",
    "RelativePath": "api/Quiz/{quizId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "quizId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "API_Services.Controllers.QuizController",
    "Method": "UpdateQuiz",
    "RelativePath": "api/Quiz/{quizId}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "quizId",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "request",
        "Type": "Repository.DTO.RequestDTO\u002BQuizDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "API_Services.Controllers.QuizController",
    "Method": "FavoriteQuiz",
    "RelativePath": "api/Quiz/{quizId}/favorite",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "quizId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Repository.DTO.ResponseDTO",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "API_Services.Controllers.QuizController",
    "Method": "ChangeQuizStatus",
    "RelativePath": "api/Quiz/{quizId}/status",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "quizId",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "request",
        "Type": "Repository.DTO.RequestDTO\u002BQuizDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "API_Services.Controllers.QuizController",
    "Method": "CheckQuizCode",
    "RelativePath": "api/Quiz/check-quiz-code/{quizCode}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "quizCode",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "API_Services.Controllers.QuizController",
    "Method": "GetJoinedPlayersAsync",
    "RelativePath": "api/Quiz/JoinedPlayers/{quizId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "quizId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "API_Services.Controllers.QuizController",
    "Method": "JoinQuizAsync",
    "RelativePath": "api/Quiz/JoinQuiz/{quizId}",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "quizId",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "playerDTO",
        "Type": "Repository.DTO.RequestDTO\u002BJoinQuizRequestDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "API_Services.Controllers.QuizController",
    "Method": "MySets",
    "RelativePath": "api/Quiz/MySets/{userId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "API_Services.Controllers.QuizController",
    "Method": "GetResultQuizAsync",
    "RelativePath": "api/Quiz/Player/ResultQuiz/{quizId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "quizId",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "PlayerId",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "API_Services.Controllers.QuizController",
    "Method": "GetQuizByQuizCode",
    "RelativePath": "api/Quiz/QuizCode/{quizCode}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "quizCode",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "API_Services.Controllers.QuizController",
    "Method": "GetResultQuizAsync",
    "RelativePath": "api/Quiz/ResultQuiz/{quizId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "quizId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "API_Services.Controllers.QuizController",
    "Method": "StartQuizAsync",
    "RelativePath": "api/Quiz/StartQuiz/{quizId}",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "quizId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "API_Services.Controllers.ServicePackController",
    "Method": "CreateServicePack",
    "RelativePath": "api/ServicePack",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "Repository.DTO.RequestDTO\u002BCreateServicePackRequestDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "API_Services.Controllers.ServicePackController",
    "Method": "GetListQuiz",
    "RelativePath": "api/ServicePack",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "API_Services.Controllers.ServicePackController",
    "Method": "UpdateServicePack",
    "RelativePath": "api/ServicePack/Update/{servicePackId}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "servicePackId",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "request",
        "Type": "Repository.DTO.RequestDTO\u002BCreateServicePackRequestDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "API_Services.Controllers.UserServicePackController",
    "Method": "GetUserServicePackListByUserId",
    "RelativePath": "api/UserServicePack",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "API_Services.Controllers.UserServicePackController",
    "Method": "CreateUserServicePackFree",
    "RelativePath": "api/UserServicePack/free-pack",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "API_Services.Controllers.UserController",
    "Method": "CreateUser",
    "RelativePath": "api/v1/users",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userDTO",
        "Type": "Repository.DTO.RequestDTO\u002BUserDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "API_Services.Controllers.UserController",
    "Method": "GetAllUsers",
    "RelativePath": "api/v1/users",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "API_Services.Controllers.UserController",
    "Method": "UpdateUser",
    "RelativePath": "api/v1/users/{userId}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "userDTO",
        "Type": "Repository.DTO.RequestDTO\u002BUserDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "API_Services.Controllers.UserController",
    "Method": "DeleteUser",
    "RelativePath": "api/v1/users/{userId}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "API_Services.Controllers.UserController",
    "Method": "GetUserById",
    "RelativePath": "api/v1/users/{userId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  }
]